# Docker Compose para Servidor VPN - Mini-Shop
# Configuración específica para servidor en VPN (IP: 10.100.88.3)

version: '3.8'

services:
  # ========================================
  # NATS Server (Message Broker) - Instancia dedicada para Mini-Shop
  # ========================================
  nats-server:
    image: nats:2.10-alpine
    container_name: mini-shop-nats
    ports:
      - "0.0.0.0:8422:4222"      # Bind a todas las interfaces
      - "0.0.0.0:8423:8222"      # HTTP Monitoring
      - "0.0.0.0:8424:6222"      # Cluster Port
    command: 
      - "--http_port"
      - "8222"
      - "--name"
      - "mini-shop-nats-dedicated"
      - "--server_name"
      - "mini-shop-instance"
    volumes:
      - nats_data:/data
    networks:
      - mini-shop-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8222/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # ========================================
  # Orders Service
  # ========================================
  orders-service:
    build:
      context: ./orders-service
      dockerfile: Dockerfile
    container_name: mini-shop-orders
    ports:
      - "0.0.0.0:8081:8081"      # Bind a todas las interfaces
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - JAVA_OPTS=-Xmx512m -Xms256m
      - SERVER_ADDRESS=0.0.0.0   # Spring Boot listen en todas las interfaces
    depends_on:
      nats-server:
        condition: service_healthy
    volumes:
      - ./orders-service/config:/app/config:ro
    networks:
      - mini-shop-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # ========================================
  # Products Service
  # ========================================
  products-service:
    build:
      context: ./products-service
      dockerfile: Dockerfile
    container_name: mini-shop-products
    ports:
      - "0.0.0.0:8082:8082"      # Bind a todas las interfaces
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - JAVA_OPTS=-Xmx512m -Xms256m
      - SERVER_ADDRESS=0.0.0.0   # Spring Boot listen en todas las interfaces
    depends_on:
      nats-server:
        condition: service_healthy
    volumes:
      - ./products-service/config:/app/config:ro
    networks:
      - mini-shop-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # ========================================
  # Notifications Service
  # ========================================
  notifications-service:
    build:
      context: ./notifications-service
      dockerfile: Dockerfile
    container_name: mini-shop-notifications
    ports:
      - "0.0.0.0:8083:8083"      # Bind a todas las interfaces
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - JAVA_OPTS=-Xmx512m -Xms256m
      - SERVER_ADDRESS=0.0.0.0   # Spring Boot listen en todas las interfaces
    depends_on:
      nats-server:
        condition: service_healthy
    volumes:
      - ./notifications-service/config:/app/config:ro
    networks:
      - mini-shop-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # ========================================
  # Nginx (Reverse Proxy y Load Balancer)
  # ========================================
  nginx:
    image: nginx:1.25-alpine
    container_name: mini-shop-nginx
    ports:
      - "0.0.0.0:8088:80"        # Puerto externo 8088, interno 80
      - "0.0.0.0:8443:443"       # Puerto externo 8443, interno 443
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - orders-service
      - products-service
      - notifications-service
    networks:
      - mini-shop-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

# ========================================
# Networks
# ========================================
networks:
  mini-shop-network:
    driver: bridge
    name: mini-shop-net

# ========================================
# Volumes
# ========================================
volumes:
  nats_data:
    name: mini-shop-nats-data
  nginx_logs:
    name: mini-shop-nginx-logs
