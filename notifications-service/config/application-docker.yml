# Configuración Docker para notifications-service
server:
  port: 8083

spring:
  application:
    name: notifications-service
  web:
    resources:
      static-locations:
      - file:/app/public/
      - classpath:/static/
      - classpath:/public/
  
  # H2 Database Configuration (para Docker)
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        web-allow-others: true   # Permitir acceso desde otros contenedores
  
  # JPA Configuration
  jpa:
    show-sql: false             # Desactivar en producción
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        '[format_sql]': false   # Desactivar en producción
        
  # DataSource
  datasource:
    url: jdbc:h2:mem:notificationsdb
    username: sa
    password: 
    driver-class-name: org.h2.Driver

# NATS Configuration para Docker (instancia dedicada)
nats:
  url: nats://nats-server:4222  # Puerto interno del contenedor (sigue siendo 4222)
  connection:
    timeout: 5000               # Aumentar timeout para Docker
    max-reconnect: 60
    reconnect-wait: 3000        # Aumentar espera de reconexión
    ping-interval: 120000
    cleanup-interval: 30000
  consumer:
    max-deliver: 3
    ack-wait: 30000
  producer:
    max-pending: 1000
    timeout: 5000               # Aumentar timeout

# Configuración de subjects para el servicio de notificaciones
messaging:
  subjects:
    notifications:
      send: "notifications.send"
      email: "notifications.email"
      sms: "notifications.sms"
      push: "notifications.push"
    orders:
      created: "orders.created"
      updated: "orders.updated"
      cancelled: "orders.cancelled"
      status-changed: "orders.status.changed"
    products:
      low-stock: "products.stock.low"
    payments:
      confirmed: "payments.confirmed"
      failed: "payments.failed"

# Configuración de canales de notificación
notification:
  channels:
    email:
      enabled: true
      smtp-host: "localhost"
      smtp-port: 587
      username: "noreply@minishop.com"
      password: "password"
    sms:
      enabled: false
      provider: "twilio"
      api-key: "your-api-key"
    push:
      enabled: false
      firebase-key: "your-firebase-key"

# Configuración de logs para Docker
logging:
  level:
    '[com.minishop]': INFO
    '[org.springframework]': WARN
    root: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# Actuator para health checks
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always
