# Upstream definitions para los servicios
upstream orders-backend {
    server orders-service:8081 max_fails=3 fail_timeout=30s;
}

upstream products-backend {
    server products-service:8082 max_fails=3 fail_timeout=30s;
}

upstream notifications-backend {
    server notifications-service:8083 max_fails=3 fail_timeout=30s;
}

# Configuración del servidor principal (Puerto 80)
server {
    listen 80;
    server_name localhost mini-shop.local;

    # Logs específicos
    access_log /var/log/nginx/mini-shop.access.log;
    error_log /var/log/nginx/mini-shop.error.log;

    # Headers de seguridad
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # ========================================
    # ORDERS SERVICE
    # ========================================
    location /orders {
        proxy_pass http://orders-backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Health check response
        proxy_intercept_errors on;
        error_page 502 503 504 = @orders_error;
    }

    # Interfaz web de Orders
    location /orders-app {
        proxy_pass http://orders-backend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ========================================
    # PRODUCTS SERVICE
    # ========================================
    location /products {
        proxy_pass http://products-backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Health check response
        proxy_intercept_errors on;
        error_page 502 503 504 = @products_error;
    }

    # ========================================
    # NOTIFICATIONS SERVICE
    # ========================================
    location /notifications {
        proxy_pass http://notifications-backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Health check response
        proxy_intercept_errors on;
        error_page 502 503 504 = @notifications_error;
    }

    # Interfaz web de Notifications
    location /notifications-app {
        proxy_pass http://notifications-backend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # H2 Console (solo para desarrollo)
    location /h2-console {
        proxy_pass http://notifications-backend/h2-console;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ========================================
    # HEALTH CHECKS
    # ========================================
    location /health {
        access_log off;
        return 200 "Mini-Shop OK\n";
        add_header Content-Type text/plain;
    }

    location /health/orders {
        proxy_pass http://orders-backend/actuator/health;
        access_log off;
    }

    location /health/products {
        proxy_pass http://products-backend/actuator/health;
        access_log off;
    }

    location /health/notifications {
        proxy_pass http://notifications-backend/actuator/health;
        access_log off;
    }

    # ========================================
    # ERROR PAGES
    # ========================================
    location @orders_error {
        return 503 '{"error": "Orders service unavailable", "timestamp": "$time_iso8601"}';
        add_header Content-Type application/json;
    }

    location @products_error {
        return 503 '{"error": "Products service unavailable", "timestamp": "$time_iso8601"}';
        add_header Content-Type application/json;
    }

    location @notifications_error {
        return 503 '{"error": "Notifications service unavailable", "timestamp": "$time_iso8601"}';
        add_header Content-Type application/json;
    }

    # ========================================
    # PÁGINA PRINCIPAL
    # ========================================
    location / {
        return 200 '
<!DOCTYPE html>
<html>
<head>
    <title>Mini-Shop - Microservicios</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 40px; background: #f5f5f5; }
        .container { max-width: 800px; margin: 0 auto; background: white; padding: 30px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
        h1 { color: #333; text-align: center; }
        .services { display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 20px; margin: 30px 0; }
        .service { background: #f8f9fa; padding: 20px; border-radius: 8px; border-left: 4px solid #007bff; }
        .service h3 { margin-top: 0; color: #007bff; }
        .service a { display: inline-block; margin: 5px 10px 5px 0; padding: 8px 16px; background: #007bff; color: white; text-decoration: none; border-radius: 4px; font-size: 14px; }
        .service a:hover { background: #0056b3; }
        .status { margin: 20px 0; }
        .status h3 { color: #28a745; }
    </style>
</head>
<body>
    <div class="container">
        <h1>🛒 Mini-Shop - Microservicios</h1>
        
        <div class="services">
            <div class="service">
                <h3>📦 Orders Service</h3>
                <p>Gestión de órdenes y pedidos</p>
                <a href="/orders-app">🌐 Interfaz</a>
                <a href="/orders">📡 API</a>
                <a href="/health/orders">❤️ Health</a>
            </div>
            
            <div class="service">
                <h3>🏪 Products Service</h3>
                <p>Catálogo de productos</p>
                <a href="/products">📡 API</a>
                <a href="/health/products">❤️ Health</a>
            </div>
            
            <div class="service">
                <h3>🔔 Notifications Service</h3>
                <p>Sistema de notificaciones</p>
                <a href="/notifications-app">🌐 Interfaz</a>
                <a href="/notifications">📡 API</a>
                <a href="/h2-console">💾 H2 Console</a>
                <a href="/health/notifications">❤️ Health</a>
            </div>
        </div>
        
        <div class="status">
            <h3>📊 Estado del Sistema</h3>
            <a href="/health">🔍 Health Check General</a>
        </div>
    </div>
</body>
</html>';
        add_header Content-Type text/html;
    }
}

# ========================================
# CONFIGURACIÓN PUERTO 8088 (Para evitar conflictos con Nginx existente)
# ========================================
server {
    listen 8088;
    server_name localhost mini-shop.local;

    # Logs específicos para puerto 8088
    access_log /var/log/nginx/mini-shop-8088.access.log;
    error_log /var/log/nginx/mini-shop-8088.error.log;

    # Headers de seguridad
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # ========================================
    # ORDERS SERVICE
    # ========================================
    location /orders {
        proxy_pass http://orders-backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Health check response
        proxy_intercept_errors on;
        error_page 502 503 504 = @orders_error;
    }

    # Interfaz web de Orders
    location /orders-app {
        proxy_pass http://orders-backend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ========================================
    # PRODUCTS SERVICE
    # ========================================
    location /products {
        proxy_pass http://products-backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Health check response
        proxy_intercept_errors on;
        error_page 502 503 504 = @products_error;
    }

    # ========================================
    # NOTIFICATIONS SERVICE
    # ========================================
    location /notifications {
        proxy_pass http://notifications-backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Health check response
        proxy_intercept_errors on;
        error_page 502 503 504 = @notifications_error;
    }

    # Interfaz web de Notifications
    location /notifications-app {
        proxy_pass http://notifications-backend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ========================================
    # H2 CONSOLE
    # ========================================
    location /h2-console {
        proxy_pass http://notifications-backend/h2-console;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Configuración específica para H2 Console
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Prefix /h2-console;
    }

    # ========================================
    # HEALTH CHECKS
    # ========================================
    location /health {
        proxy_pass http://orders-backend/actuator/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /health/orders {
        proxy_pass http://orders-backend/actuator/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /health/products {
        proxy_pass http://products-backend/actuator/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /health/notifications {
        proxy_pass http://notifications-backend/actuator/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ========================================
    # ERROR PAGES
    # ========================================
    location @orders_error {
        return 503 'Orders Service no disponible';
        add_header Content-Type text/plain;
    }

    location @products_error {
        return 503 'Products Service no disponible';
        add_header Content-Type text/plain;
    }

    location @notifications_error {
        return 503 'Notifications Service no disponible';
        add_header Content-Type text/plain;
    }

    # ========================================
    # PÁGINA PRINCIPAL - PUERTO 8088
    # ========================================
    location = / {
        return 200 '<!DOCTYPE html>
<html>
<head>
    <title>Mini-Shop Portal (Puerto 8088)</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background: #f5f5f5; }
        .container { max-width: 1200px; margin: 0 auto; background: white; padding: 20px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
        .header { text-align: center; margin-bottom: 30px; }
        .services { display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px; margin-bottom: 30px; }
        .service { border: 1px solid #ddd; padding: 20px; border-radius: 8px; background: #f9f9f9; }
        .service h3 { margin-top: 0; color: #333; }
        .service a { display: inline-block; margin: 5px 10px 5px 0; padding: 8px 16px; background: #007bff; color: white; text-decoration: none; border-radius: 4px; }
        .service a:hover { background: #0056b3; }
        .status { text-align: center; padding: 20px; background: #e8f5e8; border-radius: 8px; }
        .port-info { background: #fff3cd; padding: 15px; border-radius: 8px; margin-bottom: 20px; border-left: 4px solid #ffc107; }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>🏪 Mini-Shop Portal</h1>
            <p>Sistema de microservicios con NATS</p>
        </div>
        
        <div class="port-info">
            <h3>🔧 Configuración Puerto 8088</h3>
            <p>Esta instancia corre en el puerto 8088 para evitar conflictos con Nginx existente.</p>
            <p>Si necesitas el puerto 80, usa docker-compose.yml en lugar de docker-compose.vpn.yml</p>
        </div>
        
        <div class="services">
            <div class="service">
                <h3>📦 Orders Service</h3>
                <p>Gestión de pedidos y órdenes</p>
                <a href="/orders-app">🌐 Interfaz</a>
                <a href="/orders">📡 API</a>
                <a href="/health/orders">❤️ Health</a>
            </div>
            
            <div class="service">
                <h3>🏪 Products Service</h3>
                <p>Catálogo de productos</p>
                <a href="/products">📡 API</a>
                <a href="/health/products">❤️ Health</a>
            </div>
            
            <div class="service">
                <h3>🔔 Notifications Service</h3>
                <p>Sistema de notificaciones</p>
                <a href="/notifications-app">🌐 Interfaz</a>
                <a href="/notifications">📡 API</a>
                <a href="/h2-console">💾 H2 Console</a>
                <a href="/health/notifications">❤️ Health</a>
            </div>
        </div>
        
        <div class="status">
            <h3>📊 Estado del Sistema</h3>
            <a href="/health">🔍 Health Check General</a>
        </div>
    </div>
</body>
</html>';
        add_header Content-Type text/html;
    }
}
