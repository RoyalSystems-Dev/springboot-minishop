@echo off
REM üöÄ Script de construcci√≥n y despliegue para Mini-Shop (Windows)
REM Versi√≥n: 1.0

echo üöÄ Mini-Shop - Build ^& Deploy Script
echo ========================================
echo.

REM Variables
set PROJECT_NAME=mini-shop
set TIMESTAMP=%date:~10,4%%date:~4,2%%date:~7,2%-%time:~0,2%%time:~3,2%%time:~6,2%
set TIMESTAMP=%TIMESTAMP: =0%

echo ¬øQu√© operaci√≥n deseas realizar?
echo 1. üî® Build completo (limpiar + construir + desplegar)
echo 2. üöÄ Solo desplegar (usar im√°genes existentes)
echo 3. üßπ Solo limpiar
echo 4. üì¶ Solo construir (sin desplegar)
echo 5. üîç Ver estado de servicios
echo 6. üìã Ver logs
echo.
set /p choice="Selecciona una opci√≥n (1-6): "

if "%choice%"=="1" goto build_complete
if "%choice%"=="2" goto deploy_only
if "%choice%"=="3" goto cleanup_only
if "%choice%"=="4" goto build_only
if "%choice%"=="5" goto show_status
if "%choice%"=="6" goto show_logs
goto invalid_option

:build_complete
echo.
echo ‚û§ Verificando dependencias...
call :check_dependencies
if errorlevel 1 exit /b 1

echo ‚û§ Limpiando containers anteriores...
call :cleanup

echo ‚û§ Construyendo servicios Java...
call :build_services
if errorlevel 1 exit /b 1

echo ‚û§ Construyendo im√°genes Docker...
call :build_images
if errorlevel 1 exit /b 1

echo ‚û§ Desplegando servicios...
call :deploy
if errorlevel 1 exit /b 1

echo ‚û§ Verificando despliegue...
call :verify_deployment

call :show_info
goto end

:deploy_only
echo.
echo ‚û§ Verificando dependencias...
call :check_dependencies
if errorlevel 1 exit /b 1

echo ‚û§ Desplegando servicios...
call :deploy
if errorlevel 1 exit /b 1

echo ‚û§ Verificando despliegue...
call :verify_deployment

call :show_info
goto end

:cleanup_only
echo.
echo ‚û§ Limpiando containers anteriores...
call :cleanup
echo ‚úÖ Limpieza completada
goto end

:build_only
echo.
echo ‚û§ Verificando dependencias...
call :check_dependencies
if errorlevel 1 exit /b 1

echo ‚û§ Construyendo servicios Java...
call :build_services
if errorlevel 1 exit /b 1

echo ‚û§ Construyendo im√°genes Docker...
call :build_images
if errorlevel 1 exit /b 1

echo ‚úÖ Construcci√≥n completada
goto end

:show_status
docker-compose ps
echo.
docker-compose logs --tail=50
goto end

:show_logs
echo.
echo ¬øDe qu√© servicio quieres ver los logs?
echo 1. Todos
echo 2. Orders
echo 3. Products
echo 4. Notifications
echo 5. NATS
echo 6. Nginx
set /p log_choice="Selecciona (1-6): "

if "%log_choice%"=="1" docker-compose logs -f
if "%log_choice%"=="2" docker-compose logs -f orders-service
if "%log_choice%"=="3" docker-compose logs -f products-service
if "%log_choice%"=="4" docker-compose logs -f notifications-service
if "%log_choice%"=="5" docker-compose logs -f nats-server
if "%log_choice%"=="6" docker-compose logs -f nginx
goto end

:invalid_option
echo Opci√≥n inv√°lida
exit /b 1

REM ========================================
REM FUNCIONES
REM ========================================

:check_dependencies
docker --version >nul 2>&1
if errorlevel 1 (
    echo ‚ùå Docker no est√° instalado
    exit /b 1
)

docker-compose --version >nul 2>&1
if errorlevel 1 (
    echo ‚ùå Docker Compose no est√° instalado
    exit /b 1
)

mvn --version >nul 2>&1
if errorlevel 1 (
    echo ‚ùå Maven no est√° instalado
    exit /b 1
)

echo ‚úÖ Todas las dependencias est√°n disponibles
exit /b 0

:cleanup
docker-compose down --remove-orphans 2>nul
docker system prune -f 2>nul
exit /b 0

:build_services
echo üì¶ Building root project...
mvn clean install -DskipTests
if errorlevel 1 exit /b 1

echo üì¶ Building orders-service...
cd orders-service
mvn clean package -DskipTests
if errorlevel 1 exit /b 1
cd ..

echo üì¶ Building products-service...
cd products-service
mvn clean package -DskipTests
if errorlevel 1 exit /b 1
cd ..

echo üì¶ Building notifications-service...
cd notifications-service
mvn clean package -DskipTests
if errorlevel 1 exit /b 1
cd ..

echo ‚úÖ Todos los servicios construidos exitosamente
exit /b 0

:build_images
docker-compose build --no-cache
if errorlevel 1 exit /b 1
echo ‚úÖ Im√°genes Docker construidas exitosamente
exit /b 0

:deploy
docker-compose up -d
if errorlevel 1 exit /b 1
echo ‚úÖ Servicios desplegados exitosamente
exit /b 0

:verify_deployment
echo Esperando que los servicios est√©n listos...
timeout /t 30 /nobreak >nul

echo üîç Verificando servicios...
REM Aqu√≠ podr√≠as agregar checks espec√≠ficos con curl si est√° disponible
echo ‚è≥ Los servicios est√°n iniciando... Verifica manualmente en el browser
exit /b 0

:show_info
echo.
echo ‚û§ Informaci√≥n de los servicios:
echo.
echo üåê Acceso a los servicios:
echo   ‚Ä¢ Mini-Shop Portal:      http://localhost
echo   ‚Ä¢ Orders Service:        http://localhost/orders-app
echo   ‚Ä¢ Products Service:      http://localhost/products
echo   ‚Ä¢ Notifications Service: http://localhost/notifications-app
echo   ‚Ä¢ H2 Console:           http://localhost/h2-console
echo   ‚Ä¢ NATS Monitoring:      http://localhost:8222
echo.
echo üîç Health Checks:
echo   ‚Ä¢ General:              http://localhost/health
echo   ‚Ä¢ Orders:               http://localhost/health/orders
echo   ‚Ä¢ Products:             http://localhost/health/products
echo   ‚Ä¢ Notifications:        http://localhost/health/notifications
echo.
echo üìä Logs:
echo   ‚Ä¢ Ver todos los logs:   docker-compose logs -f
echo   ‚Ä¢ Ver logs espec√≠ficos: docker-compose logs -f [service-name]
echo.
exit /b 0

:end
echo.
echo üéâ Proceso completado!
pause
