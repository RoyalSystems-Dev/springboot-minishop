# Configuración Docker para orders-service
server:
  port: 8081

spring:
  application:
    name: orders-service
  web:
    resources:
      static-locations:
      - file:/app/public/
      - classpath:/static/
      - classpath:/public/

nats:
  url: nats://nats-server:4222  # Usar nombre del servicio de Docker
  connection:
    timeout: 5000               # Aumentar timeout para Docker
    max-reconnect: 60
    reconnect-wait: 3000        # Aumentar espera de reconexión
    ping-interval: 120000
    cleanup-interval: 30000
  consumer:
    max-deliver: 3
    ack-wait: 30000
  producer:
    max-pending: 1000
    timeout: 5000               # Aumentar timeout
  cluster:
    enabled: false
    
# Configuración de subjects para el servicio de órdenes
messaging:
  subjects:
    orders:
      created: "orders.created"
      updated: "orders.updated"
      cancelled: "orders.cancelled"
      status-changed: "orders.status.changed"
    notifications:
      send: "notifications.send"
    products:
      check-inventory: "products.inventory.check"
      update-inventory: "products.inventory.update"
    payments:
      process: "payments.process"
      confirmed: "payments.confirmed"
      failed: "payments.failed"

# Configuración de logs para Docker
logging:
  level:
    com.minishop: INFO
    org.springframework: WARN
    root: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# Actuator Configuration for Docker
management:
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
  health:
    livenessState:
      enabled: true
    readinessState:
      enabled: true
